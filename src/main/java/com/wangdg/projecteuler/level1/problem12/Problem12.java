package com.wangdg.projecteuler.level1.problem12;

import org.apache.commons.math3.util.ArithmeticUtils;

/**
 The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

 Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
 10: 1,2,5,10
 15: 1,3,5,15
 21: 1,3,7,21
 28: 1,2,4,7,14,28
 We can see that 28 is the first triangle number to have over five divisors.

 What is the value of the first triangle number to have over five hundred divisors?

 意思是找三角数的约数

 找约数不用1-n那么找，开个根号就行。

 */
public class Problem12 {

    public static void main(String[] args) {
        long n = 0;
        for (int i = 1; i < Long.MAX_VALUE; i++) {
            n += i;
            if (getDivisorNumber(n) > 500) {
                System.out.println("result = " + n);
                return;
            }
        }
    }

    protected static int getDivisorNumber(long n) {
        long sqrt = ((long) Math.sqrt(n)) + 1;
        int result = 0;
        for (int i = 1; i <= sqrt; i++) {
            if (n % i == 0) {
                if (n / i == i) {
                    result += 1;
                } else {
                    result += 2;
                }
            }
        }
        return result;
    }
}
